@using BlazingApple.Components.Services;

<h2>Icons</h2>
<p>
	BlazingApple offers an API over FontAwesome's Icons, making it really easy to use them in Blazor. 
	For applications that allow user's to choose their <em>own</em> icons, use the 
	<CodePreview Inline="true" Code="IconChooser" /> component.
</p>

<h3>Composite Icons</h3>
<p>Icons can also be made as composite icons, where one icon is superimposed over another using the <CodePreview Code="ChildContent" Inline="true" /> property.</p>
<Icon I="IconType.Like" style="color:deepskyblue;" AltText="Sort of like">
	<i class="fas fa-exclamation-triangle og-golden-color" style="color:goldenrod;"></i>
</Icon>

<h2>Icon Chooser</h2>
<div class="row">
	<div class="col-2" title="@($"{_iconData?.Name}: {_iconData?.IconClasses}")">
		<label class="small">Selected icon</label>
		@if(_iconData is not null) 
		{
			<i class="@_iconData?.IconClasses"/>
		}
		else
		{
			<div>Not set.</div>
		}
	</div>
	<div class="col-10">
		<CodePreview Code="@("<IconChooser />")" />.
	</div>
</div>

<IconChooser @bind-Value="_iconData" />
