@typeparam T

@if (_isOpen)
{
	@* z-index 1029 to be 1 below the top bar menu *@
	<div style="width: 100%; height: 100%; top: 0%; left: 0%; position: fixed; z-index:1029;" @onclick="ToggleOpen"></div>
}

@{
	string dropDownButtonClass = _isOpen ? $"btn {ButtonClass} dropdown-toggle show" : $"btn {ButtonClass} dropdown-toggle";
	string dropDownMenuClass = _isOpen ? "dropdown-menu show" : "dropdown-menu";
}
<CascadingValue Value="this">
	<div class="dropdown">
		<button class="@dropDownButtonClass" type="button" @onclick="ToggleOpen" disabled="@Disabled" @attributes="@AdditionalAttributes">
			@if(!string.IsNullOrEmpty(Label)) 
			{
				<span>@Label: </span>
			}
			
			@if(Items is not null)
			{
				DropDownItem<T>? item = Items.SingleOrDefault(i => (Value == null && i.Value == null) || (i.Value != null && i.Value.Equals(Value)));
				
				@if(item?.ChildContent is not null)
				{
					@item.ChildContent
				}
			}
		</button>

		<ul class="@dropDownMenuClass" style="z-index: 1030;">
			@ChildContent
		</ul>
	</div>
</CascadingValue>