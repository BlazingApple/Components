@typeparam TItem

@if (Items is not null && ChildContent is not null && ElementId is not null)
{
    <div class="carouselContainer">
        <div class="carouselWithNavContainer">

            @if(!HideNavButtons)
            {
                <button type="button" @onclick="PreviousButtonClicked"
                    class=@($"btnCarouselPrevNav carouselPrevNexButtons{(_activeItem==0 ? " slideStart hidden" : "")}")>
                    <i class="fas fa-chevron-left"></i>
                </button>
            }

            <div class="carouselWindowWrapper snap">
                <div class="carouselWindow" role="list">
                    @for (int i = 0; i < Items.Count; i++)
                    {
                        int currentIndex;
                        {
                            currentIndex = i;
                        }
                        <div id="@($"{ElementId}{currentIndex}")" data-slideindex="@(currentIndex)" data-slidebuttonselector="@($"#{ElementId}-carouselButton-{currentIndex}")" class="slide" role="listitem" @onclick=@(()=>ItemButtonClicked(currentIndex))>
                            @ChildContent(Items[i])
                        </div>
                    }
                </div>
            </div>

            @if(!HideNavButtons)
            {
                <button type="button"
                    @onclick="NextButtonClicked"
                    class=@($"btnCarouselNextNav carouselPrevNexButtons{(_activeItem==Items.Count-1 ? " slideEnd hidden" : "")}")>
                    <i class="fas fa-chevron-right"></i>
                </button>
            }
        </div>
        @if(!HideIndicatorButtons)
        {
            <div class="carouselButtons">
                <div class="carouselButtonContainer">
                    <div id="@($"{ElementId}-indicators")" class="carouselIndicators">
                        @for (int i = 0; i < Items.Count; i++)
                        {
                            int currentIndex;
                            {
                                currentIndex = i;
                            }
                            <a type="button" id="@($"{ElementId}-carouselButton-{i}")" data-slideindex="@(i)" class="carouselButton" title="Go to this item" @onclick="@(() => ItemButtonClicked(currentIndex))">
                                <div class="carouselButtonInner">
                                    <span class="clearlabel">@i of @Items.Count</span>
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}